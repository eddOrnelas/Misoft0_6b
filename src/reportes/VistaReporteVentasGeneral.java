/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package reportes;

import articulo.Articulo;
import java.awt.event.KeyEvent;
import java.sql.Date;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.RowSorter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import venta.ArticuloVenta;
import venta.Venta;

/**
 *
 * @author USUARIO
 */
public class VistaReporteVentasGeneral extends javax.swing.JPanel {

    /**
     * Creates new form VistaReporteVentas
     */
    VistaReporteVentasGeneral() {
        initComponents();
        //Fecha no sea mayor a la actual.
//        Calendar cal = new GregorianCalendar();
//        
//        int month = cal.get(Calendar.MONTH)+1;
//        int year = cal.get(Calendar.YEAR)-1900;
//        int day = cal.get(Calendar.DAY_OF_MONTH)-31;
//                
//        txFechaFinal.setDateFormatString("yyyy-MM-dd");
//        txFechaFinal.setMaxSelectableDate(new Date(year,month,day));
//        
//        txFechaInicio.setDateFormatString("yyyy-MM-dd");
//        txFechaInicio.setMaxSelectableDate(new Date(year,month,day));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btExportarVentas = new javax.swing.JButton();
        btCancelarRepVentas = new javax.swing.JButton();
        btAceptarRepVentas = new javax.swing.JButton();
        txNoVenta = new javax.swing.JLabel();
        txNumVenta = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbVentas = new javax.swing.JTable();
        txFecHr = new javax.swing.JLabel();
        txTotal = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Reporte de Ventas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        setMaximumSize(new java.awt.Dimension(1200, 350));
        setMinimumSize(new java.awt.Dimension(1200, 350));
        setPreferredSize(new java.awt.Dimension(1200, 350));

        btExportarVentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pdf.png"))); // NOI18N
        btExportarVentas.setText("Exportar");
        btExportarVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExportarVentasActionPerformed(evt);
            }
        });

        btCancelarRepVentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/img20x20/cancelar_1.jpg"))); // NOI18N
        btCancelarRepVentas.setText("Cancelar");
        btCancelarRepVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarRepVentasActionPerformed(evt);
            }
        });

        btAceptarRepVentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/aceptar1.png"))); // NOI18N
        btAceptarRepVentas.setText("Aceptar");
        btAceptarRepVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAceptarRepVentasActionPerformed(evt);
            }
        });

        txNoVenta.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txNoVenta.setText("No. de Venta");

        txNumVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txNumVentaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txNumVentaKeyTyped(evt);
            }
        });

        jSeparator1.setMaximumSize(new java.awt.Dimension(1150, 10));
        jSeparator1.setMinimumSize(new java.awt.Dimension(1150, 10));
        jSeparator1.setPreferredSize(new java.awt.Dimension(1150, 10));

        jScrollPane1.setMaximumSize(new java.awt.Dimension(1150, 200));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(1150, 200));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(1150, 200));

        tbVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Código de Artículo", "Descripción", "Cantidad", "Precio de Venta", "IVA", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbVentas.setMaximumSize(new java.awt.Dimension(1150, 200));
        tbVentas.setMinimumSize(new java.awt.Dimension(1150, 200));
        tbVentas.setPreferredSize(new java.awt.Dimension(1150, 200));
        jScrollPane1.setViewportView(tbVentas);
        if (tbVentas.getColumnModel().getColumnCount() > 0) {
            tbVentas.getColumnModel().getColumn(0).setResizable(false);
            tbVentas.getColumnModel().getColumn(1).setResizable(false);
            tbVentas.getColumnModel().getColumn(2).setResizable(false);
            tbVentas.getColumnModel().getColumn(3).setResizable(false);
            tbVentas.getColumnModel().getColumn(4).setResizable(false);
            tbVentas.getColumnModel().getColumn(5).setResizable(false);
        }

        txFecHr.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txTotal.setMaximumSize(new java.awt.Dimension(200, 30));
        txTotal.setMinimumSize(new java.awt.Dimension(200, 30));
        txTotal.setPreferredSize(new java.awt.Dimension(200, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txNoVenta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txNumVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(btAceptarRepVentas)
                        .addGap(18, 18, 18)
                        .addComponent(btCancelarRepVentas)
                        .addGap(102, 102, 102)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txFecHr, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btExportarVentas))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1153, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txFecHr, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txNoVenta)
                        .addComponent(txNumVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btAceptarRepVentas)
                        .addComponent(btCancelarRepVentas))
                    .addComponent(btExportarVentas))
                .addGap(9, 9, 9)
                .addComponent(txTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btExportarVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExportarVentasActionPerformed
        limpiarTabla();
        ModeloCorte reporte = null;
        //Creamos controlador corte
        ControlReporte ctrCorte = new ControlReporte();

        
        int band=0;
        Long nVenta = null;
    
         String numVenta = "";
        if (txNumVenta.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Ingrese No. de Venta.");
            band =0;
            
        } else {
            
            numVenta = txNumVenta.getText();
            band=1;
        }
        
        
        nVenta = Long.parseLong(numVenta);
        
        
        if(band==1){
        reporte = ctrCorte.realizarReporteVentas(nVenta);

        if (reporte == null) {
            JOptionPane.showMessageDialog(this, " No existen registros para No. de Venta "+nVenta);
        } 
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btExportarVentasActionPerformed

    private void btCancelarRepVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarRepVentasActionPerformed
        // Botón Cancelar Rep Ventas

        this.removeAll();
        //this.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        this.revalidate();
        this.repaint();
        this.setVisible(false);

        // TODO add your handling code here:
    }//GEN-LAST:event_btCancelarRepVentasActionPerformed

    private void btAceptarRepVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAceptarRepVentasActionPerformed
        //Botón aceptar
        // TODO add your handling code here:
        limpiarTabla();
        ArticuloVenta mVentas = new ArticuloVenta(true);
       
        if(txNumVenta.getText().equals("")){
       
            JOptionPane.showMessageDialog(this,"Ingrese No. de Venta.");
        
        }
        else{
        
         //String donde almacenar el texto a buscar
        Long nVenta = Long.parseLong(txNumVenta.getText());
        
        
        //Iniciamos objectos donde guardaremos los resultados de busqueda
       
        
        Object[] ventas = null;
        
        
        Object[][] opciones = new Object[][]{{"idVenta","=",nVenta}};
        ventas = mVentas.buscarBD("all", opciones);
        
        
        if(ventas.length==0){
        JOptionPane.showMessageDialog(this,"No existen registros para No. de Venta "+nVenta);
        }else
        {
        llenarTabla(ventas);
        }
        
       
      
        
        
          
            
        
        }//cierre de 1er else
// TODO add your handling code here:
    }//GEN-LAST:event_btAceptarRepVentasActionPerformed

    private void txNumVentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txNumVentaKeyTyped
        char caracter = evt.getKeyChar();
        if(((caracter < '0') || (caracter > '9')) &&(caracter != KeyEvent.VK_BACK_SPACE) && (caracter != KeyEvent.VK_ENTER)){
        evt.consume();
        JOptionPane.showMessageDialog(this, "Ingrese sólo dígitos: {0,1,2,3,4,5,6,7,8,9}");
        }
// TODO add your handling code here:
    }//GEN-LAST:event_txNumVentaKeyTyped

    private void txNumVentaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txNumVentaKeyPressed

        // TODO add your handling code here:
        
        int key=evt.getKeyCode();
    if(evt.getSource()==txNumVenta)
    {
        if(key==KeyEvent.VK_ENTER)
        { 
           limpiarTabla();
           btAceptarRepVentasActionPerformed(null);
        }
    }
    }//GEN-LAST:event_txNumVentaKeyPressed
    private void llenarTabla(Object[] venta) {
    
        Object[]dventas = null;
        int x=0;
        int tam = venta.length;
        double total = 0.0;
        for (x=0;x<tam;x++){
        Long tmpIdArt;
        
        tmpIdArt = ((ArticuloVenta)venta[x]).getIdArticulo();
        Object[][] opciones2 = new Object[][]{{"idArticulo","=",tmpIdArt}};
        Articulo dVenta = new Articulo(true);
        dventas = dVenta.buscarBD("all",opciones2);
        
        
        /* obtener articulos */

        DecimalFormat decimal = new DecimalFormat("#.##");
        Long nVenta = Long.parseLong(txNumVenta.getText());
        
        
        Object[] fventas = null;
        Object[][] opciones = new Object[][]{{"idVenta","=",nVenta}};
        Venta fVenta = new Venta(true);
        fventas = fVenta.buscarBD("all", opciones);
        
        txFecHr.setText("Fecha y Hora:  " + ((Venta) fventas[0]).getFecha());
        txTotal.setText("Total:  $" + ((Venta) fventas[0]).getTotal());
        
        Object [] desc = null;
       
        DefaultTableModel datos = (DefaultTableModel) tbVentas.getModel();
        datos.setRowCount(0);
        for(Object thisVenta:venta)
          {
          float tmpTotal= ((ArticuloVenta)thisVenta).getCantidad() * ((ArticuloVenta)thisVenta).getPrecioVenta() ;
          float tmpIVA = ((11*tmpTotal)/111);
          float tmpPrecioVenta = (100*tmpTotal)/111 ;
          
          datos.addRow(new Object[] {
         ((Articulo)dventas[0]).getCodigoArticulo(),         
         ((Articulo)dventas[0]).getDescripcion(),
          ((ArticuloVenta)thisVenta).getCantidad(),
                   
          decimal.format(tmpPrecioVenta),
           decimal.format(tmpIVA),
           decimal.format(tmpTotal)
            
          });
          
          
          x++;
          //Obtener los datos del siguiente artículo
          tmpIdArt = ((ArticuloVenta)venta[x]).getIdArticulo();
          
          opciones2 = new Object[][]{{"idArticulo","=",tmpIdArt}};
          dVenta = new Articulo(true);
          dventas = dVenta.buscarBD("all",opciones2);
          
          }
        
        
        RowSorter<TableModel> sorter = new TableRowSorter<TableModel>(tbVentas.getModel());
          
        tbVentas.setRowSorter(sorter);}

}
    private void limpiarTabla(){
        DefaultTableModel datos = (DefaultTableModel) tbVentas.getModel();
        datos.setRowCount(0);
        datos.addRow(new Object[] {
         "","","","","",""   
       });
        RowSorter<TableModel> sorter = new TableRowSorter<TableModel>(tbVentas.getModel());
          
        tbVentas.setRowSorter(sorter);
        txFecHr.setText("");
        txTotal.setText("");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAceptarRepVentas;
    private javax.swing.JButton btCancelarRepVentas;
    private javax.swing.JButton btExportarVentas;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tbVentas;
    private javax.swing.JLabel txFecHr;
    private javax.swing.JLabel txNoVenta;
    private javax.swing.JTextField txNumVenta;
    private javax.swing.JLabel txTotal;
    // End of variables declaration//GEN-END:variables
}
