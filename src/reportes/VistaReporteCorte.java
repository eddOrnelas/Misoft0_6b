/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package reportes;

import java.sql.Date;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrator
 */
public class VistaReporteCorte extends javax.swing.JPanel {

    /**
     * Creates new form VistaReporteCorte
     */
    public VistaReporteCorte() {
        initComponents();
        //Fecha no sea mayor a la actual.
        Calendar cal = new GregorianCalendar();
        
        int month = cal.get(Calendar.MONTH)+1;
        int year = cal.get(Calendar.YEAR)-1900;
        int day = cal.get(Calendar.DAY_OF_MONTH)-31;
                
        txFechaFinal.setDateFormatString("yyyy-MM-dd");
        txFechaFinal.setMaxSelectableDate(new Date(year,month,day));
        
        txFechaInicio.setDateFormatString("yyyy-MM-dd");
        txFechaInicio.setMaxSelectableDate(new Date(year,month,day));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        btCancelarReporteC = new javax.swing.JButton();
        txFechaFinal = new com.toedter.calendar.JDateChooser();
        btAceptarCorteCaja = new javax.swing.JButton();
        txFechaInicio = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Rango de Fechas Corte Caja", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        setMaximumSize(new java.awt.Dimension(600, 140));
        setMinimumSize(new java.awt.Dimension(600, 140));
        setPreferredSize(new java.awt.Dimension(600, 140));
        setLayout(new java.awt.GridBagLayout());

        btCancelarReporteC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/img20x20/cancelar_1.jpg"))); // NOI18N
        btCancelarReporteC.setText("Cancelar");
        btCancelarReporteC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarReporteCActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 18, 7, 0);
        add(btCancelarReporteC, gridBagConstraints);

        txFechaFinal.setDateFormatString("yyyy-MM-dd");
        txFechaFinal.setMaximumSize(new java.awt.Dimension(85, 25));
        txFechaFinal.setMinimumSize(new java.awt.Dimension(85, 25));
        txFechaFinal.setPreferredSize(new java.awt.Dimension(85, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 60;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(62, 4, 0, 6);
        add(txFechaFinal, gridBagConstraints);

        btAceptarCorteCaja.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/img20x20/aceptar1.png"))); // NOI18N
        btAceptarCorteCaja.setText("Aceptar");
        btAceptarCorteCaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAceptarCorteCajaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 123, 7, 0);
        add(btAceptarCorteCaja, gridBagConstraints);

        txFechaInicio.setDateFormatString("yyyy-MM-dd");
        txFechaInicio.setMaximumSize(new java.awt.Dimension(85, 25));
        txFechaInicio.setMinimumSize(new java.awt.Dimension(85, 25));
        txFechaInicio.setPreferredSize(new java.awt.Dimension(85, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 60;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(62, 4, 0, 0);
        add(txFechaInicio, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Fecha Inicio:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(72, 6, 0, 0);
        add(jLabel1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Fecha Termino:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(72, 68, 0, 0);
        add(jLabel2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void btAceptarCorteCajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAceptarCorteCajaActionPerformed
        // Ejecuto corte de caja
        ModeloCorte reporte = null;
        //Creamos controlador corte
        ControlReporte ctrCorte = new ControlReporte();

        //Le damos formato a la fecha para que mySQL la reconozca
        txFechaInicio.setDateFormatString("yyy-MM-dd");
        txFechaFinal.setDateFormatString("yyy-MM-dd");
        int band = 0;
        int band2 = 0;
        int band4 =0;

        String fecha1 = "";
        String fecha2 = "";

        //Obtenemos los valores de la texto de la fecha del calendario
        if (txFechaInicio.getCalendar() != null) {
            fecha1 = txFechaInicio.getCalendar().get(Calendar.YEAR) + "-" + (txFechaInicio.getCalendar().get(Calendar.MONTH) + 1) + "-" + txFechaInicio.getCalendar().get(Calendar.DAY_OF_MONTH);
            band=1;
        } else {
            JOptionPane.showMessageDialog(this, "Ingrese Fecha Inicio");
            band=0;
        }

        if (txFechaFinal.getCalendar() != null) {
            fecha2 = txFechaFinal.getCalendar().get(Calendar.YEAR) + "-" + (txFechaFinal.getCalendar().get(Calendar.MONTH) + 1) + "-" + txFechaFinal.getCalendar().get(Calendar.DAY_OF_MONTH);
            band2=2;
        } else {
            JOptionPane.showMessageDialog(this, "Ingrese Fecha Termino");
            band =0;
        }
        //Validar fecha inicio <= fecha termino
        if (txFechaFinal.getCalendar() != null && txFechaInicio.getCalendar() != null) {
            int a1 = txFechaInicio.getCalendar().get(Calendar.YEAR);
            int a2 = txFechaFinal.getCalendar().get(Calendar.YEAR);
            
            int mes1 = txFechaInicio.getCalendar().get(Calendar.MONTH);
            int mes2 = txFechaFinal.getCalendar().get(Calendar.MONTH);
            
            int dia1 = txFechaInicio.getCalendar().get(Calendar.DAY_OF_MONTH);
            int dia2 = txFechaFinal.getCalendar().get(Calendar.DAY_OF_MONTH);
            
            
            if(a1>a2){
            JOptionPane.showMessageDialog(this, "Ingrese Fecha Inicio menor o igual a Fecha Termino.");
            band4 = 4;
            }
            
            if(a1==a2){
                if(mes1>mes2){
                JOptionPane.showMessageDialog(this, "Ingrese Fecha Inicio menor o igual a Fecha Termino.");
                band4 = 4;
                }else{
                    if(mes1==mes2){
                        if(dia1>dia2){
                            JOptionPane.showMessageDialog(this, "Ingrese Fecha Inicio menor o igual a Fecha Termino.");
                            band4 = 4;
                        }
                    }
                
                }
            }else{
            band4=0;
            }
        }
        if(band==1&&band2==2&&band4==4){
        reporte = ctrCorte.realizarReporteCorte(fecha1, fecha2);

        if (reporte == null) {
            JOptionPane.showMessageDialog(this, " No existen registros de corte de caja para ese rango de fechas.");

        }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btAceptarCorteCajaActionPerformed

    private void btCancelarReporteCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarReporteCActionPerformed
        // Boton Cancelar Rep Corte Caja
           
           this.removeAll();
           //this.setBorder(javax.swing.BorderFactory.createEtchedBorder());
           this.revalidate();
           this.repaint();
           this.setVisible(false);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_btCancelarReporteCActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAceptarCorteCaja;
    private javax.swing.JButton btCancelarReporteC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private com.toedter.calendar.JDateChooser txFechaFinal;
    private com.toedter.calendar.JDateChooser txFechaInicio;
    // End of variables declaration//GEN-END:variables
}
